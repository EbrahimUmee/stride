syntax = "proto3";
package Stridelabs.stride.claim.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Stride-Labs/stride/x/claim/types";

// Msg defines the Msg service.
service Msg {
  rpc DepositAirdrop(MsgDepositAirdrop) returns (MsgDepositAirdropResponse);
  rpc SetAirdropAllocations(MsgSetAirdropAllocations) returns (MsgSetAirdropAllocationsResponse);
  rpc ClaimFreeAmount(MsgClaimFreeAmount) returns (MsgClaimFreeAmountResponse);
}

message MsgDepositAirdrop {
  string distributor = 1;
  repeated cosmos.base.v1beta1.Coin airdrop_amount = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgDepositAirdropResponse {
}

message MsgSetAirdropAllocations {
  string allocator = 1;
  repeated string users = 2;
  repeated string weights = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"weights\""
  ];
}

message MsgSetAirdropAllocationsResponse {}

message MsgClaimFreeAmount {
  string user = 1;
}

message MsgClaimFreeAmountResponse {
  repeated cosmos.base.v1beta1.Coin claimed_amount = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
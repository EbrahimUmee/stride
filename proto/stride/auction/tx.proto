syntax = "proto3";

package stride.auction;

import "stride/auction/auction_pool.proto";
import "stride/auction/bid.proto";

option go_package = "github.com/Stride-Labs/stride/v5/x/auction/types";

// Msg defines the Msg service.
service Msg {
  rpc StartAuction(MsgStartAuction) returns (MsgStartAuctionResponse);
  rpc SubmitOpenBid(MsgSubmitOpenBid) returns (MsgSubmitOpenBidResponse);  
  rpc SubmitSealedBid(MsgSubmitSealedBid) returns (MsgSubmitSealedBidResponse);
  rpc RevealBid(MsgRevealBid) returns (MsgRevealBidResponse);    
}

message MsgStartAuction {
  string creator = 1;
  string zone = 2;
  uint64 poolID = 3;
}

message MsgStartAuctionResponse {}



message MsgSubmitSealedBid {
  string creator = 1;
  string zone = 2;
  uint64 poolID = 3;
  string hashedBid = 4;
}

message MsgSubmitSealedBidResponse {}



message MsgSubmitOpenBid {
  string creator = 1;
  string zone = 2;
  uint64 poolID = 3;
  string bid = 4;
}

message MsgSubmitOpenBidResponse {}



message MsgRevealBid {
  string creator = 1;
  string zone = 2;
  uint64 poolID = 3;
  string bid = 4;
  string salt = 5;
}

message MsgRevealBidResponse {}

syntax = "proto3";
package stride.ratelimit;

import "stride/ratelimit/ratelimit.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/Stride-Labs/stride/v4/x/ratelimit/types";

// Query defines the gRPC querier service.
service Query {
  rpc RateLimits(QueryRateLimitsRequest) returns (QueryRateLimitsResponse) {
    option (google.api.http).get = "/ratelimit/ratelimits";
  }
  rpc RateLimit(QueryRateLimitRequest) returns (QueryRateLimitResponse) {
    option (google.api.http).get = "/ratelimit/ratelimit/{denom}/{channel_id}";
  }
  rpc RateLimitByChainId(QueryRateLimitsByChainIdRequest)
      returns (QueryRateLimitsByChainIdResponse) {
    option (google.api.http).get = "/ratelimit/ratelimits/{chain_id}";
  }
}

message QueryRateLimitsRequest {}
message QueryRateLimitsResponse {
  repeated RateLimit rate_limits = 1 [ (gogoproto.nullable) = false ];
}

message QueryRateLimitRequest {
  string denom = 1;
  string channel_id = 2;
}
message QueryRateLimitResponse { RateLimit rate_limit = 1; }

message QueryRateLimitsByChainIdRequest { string chain_id = 1; }
message QueryRateLimitsByChainIdResponse {
  repeated RateLimit rate_limits = 1 [ (gogoproto.nullable) = false ];
}

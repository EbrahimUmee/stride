syntax = "proto3";
package stride.ratelimit;

import "gogoproto/gogo.proto";

option go_package = "github.com/Stride-Labs/stride/v4/x/ratelimit/types";

// Msg defines the Msg service.
service Msg {
  rpc AddRateLimit(MsgAddRateLimit) returns (MsgAddRateLimitResponse);
  rpc UpdateRateLimit(MsgUpdateRateLimit) returns (MsgUpdateRateLimitResponse);
  rpc RemoveRateLimit(MsgRemoveRateLimit) returns (MsgRemoveRateLimitResponse);
  rpc ResetRateLimit(MsgResetRateLimit) returns (MsgResetRateLimitResponse);
}

message MsgAddRateLimit {
  string creator = 1;
  string denom = 2;
  string channel_id = 3;
  string max_percent_send = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string max_percent_recv = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 duration_hours = 6;
}
message MsgAddRateLimitResponse {}

message MsgUpdateRateLimit {
  string creator = 1;
  string denom = 2;
  string channel_id = 3;
  string max_percent_send = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string max_percent_recv = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 duration_hours = 6;
}
message MsgUpdateRateLimitResponse {}

message MsgRemoveRateLimit {
  string creator = 1;
  string denom = 2;
  string channel_id = 3;
}
message MsgRemoveRateLimitResponse {}

message MsgResetRateLimit {
  string creator = 1;
  string denom = 2;
  string channel_id = 3;
}
message MsgResetRateLimitResponse {}

#!/bin/bash

set -eu 
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

STRIDE_CHAIN_ID=local-test-2
HOST_CHAIN_ID=evmos_9000-4
HOST_ENDPOINT=tendermint.bd.evmos.dev
HOST_ACCOUNT_PREFIX=evmos
HOST_DENOM=atevmos
HOST_BINARY=build/evmosd
HOST_VAL_NAME_1=polkachu
HOST_VAL_ADDRESS_1=evmosvaloper1qvc6jej73armfs5fadn9lprx768f46d9wpd7d7
HOST_VAL_NAME_2=alphabet
HOST_VAL_ADDRESS_2=evmosvaloper158wwas4v6fgcu2x3plg70s6u0fm0lle237kltr
HOT_WALLET_ADDRESS=evmos1tvcz0p3fuywgjvsfah23232caaxdsf5vwaqehm
# age wolf raw merge paddle topple inquiry chicken gym increase glory surge

STATE=$SCRIPT_DIR/../state
LOGS=$SCRIPT_DIR/../logs
STRIDE_LOGS=$LOGS/stride.log
STRIDE_HOME=$STATE/stride1
DOCKER_COMPOSE="docker-compose -f $SCRIPT_DIR/docker-compose.yml"

HERMES_STRIDE_MNEMONIC="alter old invest friend relief slot swear pioneer syrup economy vendor tray focus hedgehog artist legend antenna hair almost donkey spice protect sustain increase"
RELAYER_STRIDE_MNEMONIC="pride narrow breeze fitness sign bounce dose smart squirrel spell length federal replace coral lunar thunder vital push nuclear crouch fun accident hood need"

# cleanup any stale state
make stop-docker
rm -rf $STATE $LOGS
mkdir -p $STATE
mkdir -p $LOGS

# Start stride
bash ${SCRIPT_DIR}/init_stride.sh $STRIDE_CHAIN_ID

$DOCKER_COMPOSE up -d stride1
$DOCKER_COMPOSE logs -f stride1 | sed -r -u "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" > $STRIDE_LOGS 2>&1 &

printf "Waiting for Stride to start..."
( tail -f -n0 $STRIDE_LOGS & ) | grep -q "finalizing commit of block"
echo "Done"

# Setup relayers
mkdir -p $STATE/hermes
mkdir -p $STATE/relayer/config
HERMES_CONFIG_FILE="$STATE/hermes/config.toml"
RELAYER_CONFIG_FILE="$STATE/relayer/config/config.yaml"
cp ${SCRIPT_DIR}/templates/hermes_config.toml $HERMES_CONFIG_FILE
cp ${SCRIPT_DIR}/templates/relayer_config.yaml $RELAYER_CONFIG_FILE

# Update relayer templates
sed -i -E "s|STRIDE_CHAIN_ID|$STRIDE_CHAIN_ID|g" $HERMES_CONFIG_FILE
sed -i -E "s|HOST_CHAIN_ID|$HOST_CHAIN_ID|g" $HERMES_CONFIG_FILE
sed -i -E "s|HOST_ENDPOINT|$HOST_ENDPOINT|g" $HERMES_CONFIG_FILE
sed -i -E "s|HOST_ACCOUNT_PREFIX|$HOST_ACCOUNT_PREFIX|g" $HERMES_CONFIG_FILE
sed -i -E "s|HOST_DENOM|$HOST_DENOM|g" $HERMES_CONFIG_FILE

sed -i -E "s|STRIDE_CHAIN_ID|$STRIDE_CHAIN_ID|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_CHAIN_ID|$HOST_CHAIN_ID|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_ENDPOINT|$HOST_ENDPOINT|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_ACCOUNT_PREFIX|$HOST_ACCOUNT_PREFIX|g" $RELAYER_CONFIG_FILE
sed -i -E "s|HOST_DENOM|$HOST_DENOM|g" $RELAYER_CONFIG_FILE

echo "Adding Hermes keys"
HERMES_CMD="$SCRIPT_DIR/../../build/hermes/release/hermes --config $STATE/hermes/config.toml"
TMP_MNEMONICS=$STATE/mnemonic.txt 
echo "$HERMES_STRIDE_MNEMONIC" > $TMP_MNEMONICS
$HERMES_CMD keys add --key-name hrly1 --chain $STRIDE_CHAIN_ID --mnemonic-file $TMP_MNEMONICS --overwrite
echo "$HOT_WALLET_1_MNEMONIC" > $TMP_MNEMONICS
$HERMES_CMD keys add --key-name hrly2 --chain $HOST_CHAIN_ID --mnemonic-file $TMP_MNEMONICS --overwrite
rm -f $TMP_MNEMONICS
# echo "$HOT_WALLET_1_MNEMONIC" > tmp
# build/hermes/release/hermes --config scripts/state/hermes/config.toml keys add --key-name hrly2 --chain evmos_9000-4 --mnemonic-file tmp --overwrite --hd-path "m/44'/118'/0'/0/0"

echo "Adding Relayer keys"
RELAYER_CMD="$SCRIPT_DIR/../../build/relayer --home $STATE/relayer"
$RELAYER_CMD keys restore stride rly1 "$RELAYER_STRIDE_MNEMONIC"
$RELAYER_CMD keys restore host rly2 "$HOT_WALLET_1_MNEMONIC" --coin-type 60
# build/relayer --home scripts/state/relayer keys restore host rly2 "$HOT_WALLET_1_MNEMONIC" --coin-type 60
# build/relayer --home relayertest keys restore stride rly1 "$RELAYER_STRIDE_MNEMONIC"
# build/relayer --home scripts/state/relayer keys restore host rly2 "$HOT_WALLET_1_MNEMONIC" --coin-type 60
# build/relayer --home scripts/state/relayer keys restore host rly2 "$HOT_WALLET_1_MNEMONIC"
# Update commands template
COMMANDS_FILE=${SCRIPT_DIR}/commands.sh
cp ${SCRIPT_DIR}/templates/commands.sh $COMMANDS_FILE
DOCKER_COMPOSE_RELATIVE="docker-compose -f scripts/local-to-mainnet/docker-compose.yml"
STATE_RELATIVE=scripts/state
LOGS_RELATIVE=scripts/logs
sed -i -E '1s/^/############################################\n### WARNING: THIS FILE IS AUTOGENERATED. ###\n###   ANY CHANGES WILL BE OVERWRITTEN.   ###\n############################################\n/' $COMMANDS_FILE
sed -i -E "s|DOCKER_COMPOSE|$DOCKER_COMPOSE_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|STATE|$STATE_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|LOGS|$LOGS_RELATIVE|g" $COMMANDS_FILE
sed -i -E "s|STRIDE_HOME|s|g" $COMMANDS_FILE
sed -i -E "s|STRIDE_CHAIN_ID|$STRIDE_CHAIN_ID|g" $COMMANDS_FILE
sed -i -E "s|HOST_CHAIN_ID|$HOST_CHAIN_ID|g" $COMMANDS_FILE
sed -i -E "s|HOST_BINARY|$HOST_BINARY|g" $COMMANDS_FILE
sed -i -E "s|HOST_DENOM|$HOST_DENOM|g" $COMMANDS_FILE
sed -i -E "s|HOST_ACCOUNT_PREFIX|$HOST_ACCOUNT_PREFIX|g" $COMMANDS_FILE
sed -i -E "s|HOST_ENDPOINT|$HOST_ENDPOINT|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_NAME_1|$HOST_VAL_NAME_1|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_NAME_2|$HOST_VAL_NAME_2|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_ADDRESS_1|$HOST_VAL_ADDRESS_1|g" $COMMANDS_FILE
sed -i -E "s|HOST_VAL_ADDRESS_2|$HOST_VAL_ADDRESS_2|g" $COMMANDS_FILE
sed -i -E "s|HOT_WALLET_ADDRESS|$HOT_WALLET_ADDRESS|g" $COMMANDS_FILE

rm -f $COMMANDS_FILE-E
echo "Done"